# -*- coding: utf-8 -*-
"""code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nj04dO8IaiXaGLxbULLSo-aiYVvcAVkB
"""

import tensorflow as tf
import random
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np
from tensorflow.keras.datasets import fashion_mnist 
from sklearn.utils import shuffle
tf.random.set_seed(2022)
random.seed(2022)
np.random.seed(2022)
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()
train_images = train_images / 255
test_images = test_images / 255
from tensorflow.python.keras.engine.input_layer import Input
model = keras.models.Sequential(
    [
     keras.layers.Input(shape=(28, 28)),
      keras.layers.Flatten(),
     keras.layers.Dense(units=256, activation='relu'),
     keras.layers.Dense(units=10, activation='softmax'),
    ]
)

model.compile(loss=keras.losses.SparseCategoricalCrossentropy(), 
              optimizer=keras.optimizers.Adam(learning_rate=0.0001),
              metrics=['accuracy'],
              )
train_labels = np.array(train_labels)
train_images = np.array(train_images)
train_labels, train_images = shuffle(train_labels, train_images)
result = model.fit(train_images, 
          train_labels, 
          batch_size=256,
          epochs=50, 
          shuffle=True,
          validation_split=0.15
         )
ev=model.evaluate(test_images,test_labels)
plt.plot(result.history['loss'])
plt.plot(result.history['val_loss'])
plt.title('loss')
plt.show()
plt.plot(result.history['accuracy'])
plt.plot(result.history['val_accuracy'])
plt.title('accuracy')
plt.show()
preds = model.predict(test_images)
print(preds.shape)
print(preds[0])
my_preds = preds.argmax(axis=1)
print(my_preds.shape)
print(my_preds[0])
print(test_labels[0])
test = test_images * 255
plt.imshow(test[10], cmap='gray')
plt.title(f'prediction: {my_preds[10]}, true_label: {test_labels[1]}')
plt.show()